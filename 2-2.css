/**{color:red;}*/
/*p{color:red;}*/
#p1{color:blue;}
.container{background-color:black;}
.text-center{text-align:center;}
.text-large{font-size:200%;}
.text-red{color:red;}
.text-blue{color:blue;}

/*a[href]{
    background-color:black;
    color:white;
}*/
a[href="http://www.naver.com"]{
    background-color:white;
    color:blue;
}
/* 요소[어트리뷰트$=값] -> 어트리뷰트가 값으로 끝날때 요소를 선택*/
a[href$="net"]{
    background-color:grey;
    color:brown;
}

/* 요소[어트리뷰터~=값] -> 어트리뷰트가 값을 단어로 포함할때 요소를 선택*/
a[target~="_blank"]{
    background-color:green;
    color:yellow;
}
/* 요소[어트리뷰트*=값] -> 요소중 어트리뷰트가 값을 포함하는 요소를 선택*/
a[href*="google"]{
    font-size:40px;
}
/* 요소[어트리뷰트^=값] -> 요소중 어트리뷰트가 값으로 시작하는 요소를 선택*/
a[href^="http://www."]{
    font-size:30px;
}

div p{color:red;} /* div의 후손요소중 p를 모두 선택*/

div>p{color:blue;} /*div의 자식요소중 p를 모두 선택*/

p[id="ul"]+ul{color:red;} /* p의 형제요소중 바로뒤에 있는 ul요소 선택 중간에 다른요소가 있다면 선택하지 않음.*/

p[id="ul"]~ul{color:blue;} /* p의 형제요소중 단순히 뒤에있는 모든 ul요소 선택*/

/* 가상클래스 selector:특정상태를 정의하는 가상클래스를 정의하여 요소를 선택
클래스를 이용한 selector은 .을 사용하지만 가상클래스 selector는 :를 사용
기본문법 ->  요소:가상클래스{property:value;}*/


/*특정상태를 정의하는 가상클래스
:link -> 방문하지 않은 링크일때
:visited -> 이미방문한 링크일때
:hover -> 마우스가 올라와있을때
:active -> 클릭된 상태일때
:focus -> 포커스가 들어와 있을때
:checked -> 체크상태일때
:enabled -> 사용사능한 상태일때
:disabled -> 사용불가능한 상태일때
*/

a[id="7.0"]:hover{color:red;} 
/* a요소에 마우스가 올라와있을때 글자색을 빨간색으로*/
input[placeholder="focus me"]:focus{background-color:yellow;} 
/*input 요소에 포커스가 들어오면 배경을 노란색으로*/

a[class="7.1"]:link{color:orange;}
/*a요소가 방문하지 않은 링크일때 글자색을 주황색으로*/
a[class="7.1"]:visited{color:black;}
/*a요소가 방문한 링크일때 글자색을 초록색으로*/
a[class="7.1"]:hover{font-weight:bold;}
/*a요소에 마우스가 올라와있으면 굵을 글씨체로*/
a[class="7.1"]:active{color:blue;}
/*a요소가 클릭된상태면 글자색을 파란색으로*/
input[type="text"][class="7.1"]:focus,input[type="password"][class="7.1"]:focus{
    color:red;
}
/*input요소가 focus가 들어와있을때 글자색을 빨간색으로*/

input[class="7,2"]:enabled + span{
    color:blue;
}

input[class="7,2"]:disabled+span{
    color:grey;
    text-decoration:line-through;
}

input[class="7,2"]:checked+span{
    color:red;
}

/* 7.3 구조가상클래스 셀렉터
:first-child: 셀렉터에 해당하는 모든요소중 첫번쩨 자식인 요소를 선택
:last-child: 셀렉터에 해당하는 모든요소중 마지막 자식인 요소를 선택*/

p:first-child{color:red;}
/*p요소중 첫번째 요소 글자색을 빨간색으로*/
p:last-child{color:blue;}
/*p요소중 마지막 요소 글자색을 파란색으로*/

/*
:nth-child(k)  셀렉터에 해당하는 모든 요소중 앞에서 k번째 자식인 요소를 선택한다.
:nth-last-child(k)  셀렉터에 해당하는 모든 요소중 뒤에서 k번째 자식인 요소를 선택한다.
k부분에는 숫자도가능 an+b꼴의 수열도 가능하다 숫자의 경우 해당번호의 요소하나를 선택
수열의경우 수열의 값에 해당하는 모든 요소를 선택한다.*/

ol[class="7.3"]>li:nth-child(2n){color:red;}
ol[class="7.3"]>li:nth-child(2n+1){color:blue;}
ol[class="7.3"]>li:first-child{color:orange;}
ol[class="7.3"]>li:last-child{color:green;}
ol[class="7.3"]>li:nth-child(4){background:brown;}

ul[class="7.3"]>:nth-last-child(2n+1){color:red;}
ul>:nth-last-child(2n){color:blue;}

p[class="7.3"]:first-of-type{color:red;}
p[class="7.3"]:last-of-type{color:blue;}
p[class="7.3"]:nth-of-type(2){color:green;}
p[class="7.3"]:nth-last-of-type(2){color:orange};


